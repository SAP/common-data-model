{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "array",
  "title": "List of CDM entities",
  "description": "This JSON schema is adopted by content providers exposing CDM entities. Instances of this schema must not contain more than one site.",
  "items": {
    "anyOf": [
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "urltemplate",
        "type": "object",
        "description": "URL Template allows integration of remote apps cross technologies",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.0.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1",
              "3.0.1",
              "3.0.0",
              "3.0"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "urlTemplate",
                  "parameters"
                ],
                "additionalProperties": false,
                "properties": {
                  "urlTemplate": {
                    "type": "string",
                    "description": "URL template string, based on https://tools.ietf.org/html/rfc6570",
                    "examples": [
                      "{host}/{path}{?queryParam,queryParam2}{#hash}",
                      "{systemAlias}/{deepLink}{?company}"
                    ]
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Parameters configuration for the given template",
                    "required": [
                      "names"
                    ],
                    "properties": {
                      "names": {
                        "type": "object",
                        "description": "Parameters names for the given URL Template, will be available for use in the template string",
                        "patternProperties": {
                          "^[\\w]+$": {
                            "oneOf": [
                              {
                                "description": "A string value of the ",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                    "examples": [
                                      "{or &sapClient,'120'}",
                                      "{&sapTheme}",
                                      "{companyId}",
                                      "{sap-system}"
                                    ]
                                  },
                                  {
                                    "type": "boolean",
                                    "description": "A boolean in case of 'boolean' parameter"
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "description": "Holds value for the parameter",
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                        "examples": [
                                          "{or &sapClient,'120'}",
                                          "{&sapTheme}",
                                          "{companyId}",
                                          "{sap-system}"
                                        ]
                                      },
                                      {
                                        "type": "boolean",
                                        "description": "A boolean in case of 'boolean' parameter"
                                      }
                                    ]
                                  },
                                  "renameTo": {
                                    "type": "string",
                                    "description": "Used for mapping of parameter names, useful in case the actual parameter key could not be defined in the utl template (e.g '-' is forbidden: sapSystem -> sap-system)",
                                    "examples": [
                                      "sap-client",
                                      "sap-language"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "editor": {
                    "type": "object",
                    "description": "Editor configuration for the given template",
                    "required": [
                      "properties"
                    ],
                    "properties": {
                      "properties": {
                        "type": "object",
                        "description": "Properties to display in editor",
                        "patternProperties": {
                          "^[\\w]+$": {
                            "oneOf": [
                              {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                    "examples": [
                                      "{or &sapClient,'120'}",
                                      "{&sapTheme}",
                                      "{companyId}",
                                      "{sap-system}"
                                    ]
                                  },
                                  {
                                    "type": "boolean",
                                    "description": "A boolean in case of 'boolean' parameter"
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "The type of the parameter: 'plain' - literal string value | 'reference' - pointing to some value | 'map' - key-value object which stores values",
                                    "type": "string",
                                    "enum": [
                                      "plain",
                                      "reference",
                                      "map",
                                      "boolean"
                                    ]
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                        "examples": [
                                          "{or &sapClient,'120'}",
                                          "{&sapTheme}",
                                          "{companyId}",
                                          "{sap-system}"
                                        ]
                                      },
                                      {
                                        "type": "boolean",
                                        "description": "A boolean in case of 'boolean' parameter"
                                      }
                                    ],
                                    "description": "Holds a default value for the parameter"
                                  },
                                  "renameTo": {
                                    "type": "string",
                                    "description": "Used for mapping of parameter names, useful in case the actual parameter key could not be defined in the utl template (e.g '-' is forbidden: sapSystem -> sap-system)",
                                    "examples": [
                                      "sap-client",
                                      "sap-language"
                                    ]
                                  },
                                  "required": {
                                    "description": "A flag which makes this parameter required, means the application must provide it",
                                    "type": "boolean"
                                  },
                                  "regex": {
                                    "description": "Regex for input validation",
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "message": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "A reference to a label to render in designtime, aside the input",
                                    "examples": [
                                      "{{myParamKey}}"
                                    ]
                                  },
                                  "order": {
                                    "type": "number",
                                    "description": "The order of the element in designtime tool (0-n)"
                                  },
                                  "blocked": {
                                    "description": "A flag which makes this ui control blocked for editing in Edit mode in designtime",
                                    "type": "boolean"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "uiTech": {
                        "type": "array",
                        "description": "The relevant UI technology/ies which is served using this template. the template would be available for systems configured with these UI technologies",
                        "items": {
                          "type": "string",
                          "examples": [
                            "SFSF",
                            "JAM"
                          ]
                        }
                      }
                    }
                  },
                  "capabilities": {
                    "type": "object",
                    "description": "UI technology capabilities of the corresponding app",
                    "properties": {
                      "statefulContainer": {
                        "description": "Configuration of stateful container capability",
                        "oneOf": [
                          {
                            "type": "boolean",
                            "description": "Boolean flag, protocol would be 'FLP' in this case"
                          },
                          {
                            "type": "object",
                            "description": "Configuration object, enables to configure a protocol (FLP is default)",
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              },
                              "protocol": {
                                "type": "string",
                                "enum": [
                                  "FLP",
                                  "GUI"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "navigationMode": {
                        "type": "string",
                        "enum": [
                          "embedded",
                          "standalone",
                          "native-iOS-install",
                          "native-iOS-launch",
                          "native-Android-install",
                          "native-Android-launch",
                          "newWindow",
                          "newWindowThenEmbedded",
                          "inplace",
                          "explace"
                        ],
                        "description": "Navigation mode of the target application. ('inplace'/'explace'/'newWindow'/'newWindowThenEmbedded' were deprecated and exist only for compatibility)"
                      },
                      "navigationModes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "embedded",
                            "standalone",
                            "native-iOS-install",
                            "native-iOS-launch",
                            "native-Android-install",
                            "native-Android-launch",
                            "newWindow",
                            "newWindowThenEmbedded",
                            "inplace",
                            "explace"
                          ],
                          "description": "Navigation mode of the target application. ('inplace'/'explace'/'newWindow'/'newWindowThenEmbedded' were deprecated and exist only for compatibility)"
                        }
                      },
                      "startMethod": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST"
                        ],
                        "description": "The HTTP method to load the application with"
                      },
                      "fullWidth": {
                        "type": "boolean",
                        "description": ""
                      },
                      "deviceTypes": {
                        "description": "Represents device types for which application is developed",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "desktop": {
                            "description": "Represents indicator whether desktop device is supported, default true",
                            "type": "boolean"
                          },
                          "tablet": {
                            "description": "Represents indicator whether tablet device is supported, default true",
                            "type": "boolean"
                          },
                          "phone": {
                            "description": "Represents indicator whether phone device is supported, default true",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "urlTemplates",
                  "parameters"
                ],
                "additionalProperties": false,
                "properties": {
                  "urlTemplates": {
                    "type": "object",
                    "description": "URL template object",
                    "required": [
                      "startUrl",
                      "installUrl"
                    ],
                    "properties": {
                      "startUrl": {
                        "type": "string"
                      },
                      "installUrl": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Parameters configuration for the given template",
                    "required": [
                      "names"
                    ],
                    "properties": {
                      "names": {
                        "type": "object",
                        "description": "Parameters names for the given URL Template, will be available for use in the template string",
                        "patternProperties": {
                          "^[\\w]+$": {
                            "oneOf": [
                              {
                                "description": "A string value of the ",
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                    "examples": [
                                      "{or &sapClient,'120'}",
                                      "{&sapTheme}",
                                      "{companyId}",
                                      "{sap-system}"
                                    ]
                                  },
                                  {
                                    "type": "boolean",
                                    "description": "A boolean in case of 'boolean' parameter"
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "description": "Holds value for the parameter",
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                        "examples": [
                                          "{or &sapClient,'120'}",
                                          "{&sapTheme}",
                                          "{companyId}",
                                          "{sap-system}"
                                        ]
                                      },
                                      {
                                        "type": "boolean",
                                        "description": "A boolean in case of 'boolean' parameter"
                                      }
                                    ]
                                  },
                                  "renameTo": {
                                    "type": "string",
                                    "description": "Used for mapping of parameter names, useful in case the actual parameter key could not be defined in the utl template (e.g '-' is forbidden: sapSystem -> sap-system)",
                                    "examples": [
                                      "sap-client",
                                      "sap-language"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "editor": {
                    "type": "object",
                    "description": "Editor configuration for the given template",
                    "required": [
                      "properties"
                    ],
                    "properties": {
                      "properties": {
                        "type": "object",
                        "description": "Properties to display in editor",
                        "patternProperties": {
                          "^[\\w]+$": {
                            "oneOf": [
                              {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                    "examples": [
                                      "{or &sapClient,'120'}",
                                      "{&sapTheme}",
                                      "{companyId}",
                                      "{sap-system}"
                                    ]
                                  },
                                  {
                                    "type": "boolean",
                                    "description": "A boolean in case of 'boolean' parameter"
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "The type of the parameter: 'plain' - literal string value | 'reference' - pointing to some value | 'map' - key-value object which stores values",
                                    "type": "string",
                                    "enum": [
                                      "plain",
                                      "reference",
                                      "map",
                                      "boolean"
                                    ]
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "A plain string value or reference pointer - the actual value will be taken from there",
                                        "examples": [
                                          "{or &sapClient,'120'}",
                                          "{&sapTheme}",
                                          "{companyId}",
                                          "{sap-system}"
                                        ]
                                      },
                                      {
                                        "type": "boolean",
                                        "description": "A boolean in case of 'boolean' parameter"
                                      }
                                    ],
                                    "description": "Holds a default value for the parameter"
                                  },
                                  "renameTo": {
                                    "type": "string",
                                    "description": "Used for mapping of parameter names, useful in case the actual parameter key could not be defined in the utl template (e.g '-' is forbidden: sapSystem -> sap-system)",
                                    "examples": [
                                      "sap-client",
                                      "sap-language"
                                    ]
                                  },
                                  "required": {
                                    "description": "A flag which makes this parameter required, means the application must provide it",
                                    "type": "boolean"
                                  },
                                  "regex": {
                                    "description": "Regex for input validation",
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "string"
                                            },
                                            "message": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "A reference to a label to render in designtime, aside the input",
                                    "examples": [
                                      "{{myParamKey}}"
                                    ]
                                  },
                                  "order": {
                                    "type": "number",
                                    "description": "The order of the element in designtime tool (0-n)"
                                  },
                                  "blocked": {
                                    "description": "A flag which makes this ui control blocked for editing in Edit mode in designtime",
                                    "type": "boolean"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "uiTech": {
                        "type": "array",
                        "description": "The relevant UI technology/ies which is served using this template. the template would be available for systems configured with these UI technologies",
                        "items": {
                          "type": "string",
                          "examples": [
                            "SFSF",
                            "JAM"
                          ]
                        }
                      }
                    }
                  },
                  "capabilities": {
                    "type": "object",
                    "description": "UI technology capabilities of the corresponding app",
                    "properties": {
                      "statefulContainer": {
                        "description": "Configuration of stateful container capability",
                        "oneOf": [
                          {
                            "type": "boolean",
                            "description": "Boolean flag, protocol would be 'FLP' in this case"
                          },
                          {
                            "type": "object",
                            "description": "Configuration object, enables to configure a protocol (FLP is default)",
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              },
                              "protocol": {
                                "type": "string",
                                "enum": [
                                  "FLP",
                                  "GUI"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "navigationMode": {
                        "type": "string",
                        "enum": [
                          "embedded",
                          "standalone",
                          "native-iOS-install",
                          "native-iOS-launch",
                          "native-Android-install",
                          "native-Android-launch",
                          "newWindow",
                          "newWindowThenEmbedded",
                          "inplace",
                          "explace"
                        ],
                        "description": "Navigation mode of the target application. ('inplace'/'explace'/'newWindow'/'newWindowThenEmbedded' were deprecated and exist only for compatibility)"
                      },
                      "navigationModes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "embedded",
                            "standalone",
                            "native-iOS-install",
                            "native-iOS-launch",
                            "native-Android-install",
                            "native-Android-launch",
                            "newWindow",
                            "newWindowThenEmbedded",
                            "inplace",
                            "explace"
                          ],
                          "description": "Navigation mode of the target application. ('inplace'/'explace'/'newWindow'/'newWindowThenEmbedded' were deprecated and exist only for compatibility)"
                        }
                      },
                      "startMethod": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST"
                        ],
                        "description": "The HTTP method to load the application with"
                      },
                      "fullWidth": {
                        "type": "boolean",
                        "description": ""
                      },
                      "deviceTypes": {
                        "description": "Represents device types for which application is developed",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "desktop": {
                            "description": "Represents indicator whether desktop device is supported, default true",
                            "type": "boolean"
                          },
                          "tablet": {
                            "description": "Represents indicator whether tablet device is supported, default true",
                            "type": "boolean"
                          },
                          "phone": {
                            "description": "Represents indicator whether phone device is supported, default true",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "businessapp",
        "type": "object",
        "description": "Business App defines the target, navigation, ui and integration attributes of an application",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.0.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1",
              "3.0.1",
              "3.0.0",
              "3.0"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "businessapp payload",
            "type": "object",
            "anyOf": [
              {
                "required": [
                  "commonAppConfig",
                  "targetAppConfig",
                  "visualizations"
                ]
              },
              {
                "required": [
                  "targetAppConfig"
                ]
              },
              {
                "required": [
                  "visualizations"
                ]
              }
            ],
            "properties": {
              "commonAppConfig": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "description": "App Descriptor structure extended with sap.integration for URL template information",
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "A reference to the corresponding Application",
                    "examples": [
                      "sap.ushell.demo.hello.flp",
                      "cus.sd.billingdoclist.manages"
                    ]
                  },
                  "sap.integration": {
                    "type": "object",
                    "properties": {
                      "urlTemplateId": {
                        "description": "Reference to the desired URL Template",
                        "type": "string",
                        "examples": [
                          "urltemplate.ui5",
                          "urltemplate.wda",
                          "urltemplate.sfsf"
                        ]
                      },
                      "urlTemplateParams": {
                        "type": "object",
                        "description": "Parameters for the corresponding URL Template",
                        "patternProperties": {
                          "^[\\w\\W]*$": {
                            "oneOf": [
                              {
                                "type": "object",
                                "patternProperties": {
                                  "^[\\w\\W]*$": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "string"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        }
                      },
                      "navMode": {
                        "type": "string",
                        "enum": [
                          "inplace",
                          "explace"
                        ],
                        "default": "inplace"
                      }
                    }
                  },
                  "sap.integrations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "urlTemplateId": {
                              "description": "Reference to the desired URL Template",
                              "type": "string",
                              "examples": [
                                "urltemplate.ui5",
                                "urltemplate.wda",
                                "urltemplate.sfsf"
                              ]
                            },
                            "urlTemplateParams": {
                              "type": "object",
                              "description": "Parameters for the corresponding URL Template",
                              "patternProperties": {
                                "^[\\w\\W]*$": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "patternProperties": {
                                        "^[\\w\\W]*$": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              }
                            },
                            "navMode": {
                              "type": "string",
                              "enum": [
                                "inplace",
                                "explace"
                              ],
                              "default": "inplace"
                            }
                          }
                        }
                      ],
                      "properties": {
                        "urlTemplateDestination": {
                          "description": "Represents a system alias to be used for resolving this URL template",
                          "type": "string"
                        },
                        "urlTemplateId": {},
                        "urlTemplateParams": {},
                        "navMode": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "sap.app": {
                    "type": "object",
                    "title": "JSON schema for SAP.APP Namespace",
                    "description": "Represents general application attributes",
                    "properties": {
                      "id": {
                        "description": "Represents mandatory unique app identifier which must correspond to component 'id/namespace'",
                        "type": "string",
                        "maxLength": 70
                      },
                      "type": {
                        "description": "Represents type of an application and can be application or component or library",
                        "type": "string",
                        "enum": [
                          "application",
                          "component",
                          "library",
                          "card"
                        ]
                      },
                      "i18n": {
                        "oneOf": [
                          {
                            "description": "Represents the object detailing the properties of the language handling",
                            "type": "object",
                            "required": [
                              "bundleUrl"
                            ],
                            "properties": {
                              "bundleUrl": {
                                "type": "string",
                                "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor"
                              },
                              "supportedLocales": {
                                "type": "array",
                                "description": "An array of locale names which are supported",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fallbackLocale": {
                                "type": "string",
                                "description": "Represents the fallback language"
                              }
                            }
                          },
                          {
                            "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor",
                            "type": "string",
                            "default": "i18n/i18n.properties"
                          }
                        ]
                      },
                      "applicationVersion": {
                        "description": "Represents mandatory version of the app",
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string"
                          }
                        }
                      },
                      "ach": {
                        "description": "Represents application component hierarchy",
                        "type": "string",
                        "pattern": "^([a-zA-Z0-9]{2,3})(-[a-zA-Z0-9]{1,6})*$"
                      },
                      "dataSources": {
                        "description": "Represents used data sources with a unique key/alias",
                        "type": "object",
                        "patternProperties": {
                          "^[a-zA-Z0-9_\\.\\-]*$": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "Represents uri of the data source",
                                "type": "string"
                              },
                              "type": {
                                "description": "Represents type of the data source. The supported types are OData, ODataAnnotation, INA, XML, JSON",
                                "type": "string",
                                "enum": [
                                  "OData",
                                  "ODataAnnotation",
                                  "INA",
                                  "XML",
                                  "JSON",
                                  "FHIR",
                                  "http",
                                  "WebSocket"
                                ],
                                "default": "OData"
                              },
                              "settings": {
                                "description": "Represents data source type specific attributes (key, value pairs)",
                                "type": "object",
                                "properties": {
                                  "odataVersion": {
                                    "description": "Represents version of OData: 2.0 is default",
                                    "type": "string",
                                    "enum": [
                                      "2.0",
                                      "4.0"
                                    ]
                                  },
                                  "localUri": {
                                    "description": "Represents path to local meta data document or annotation uri",
                                    "type": "string"
                                  },
                                  "annotations": {
                                    "description": "Represents  array of annotation which references an existing data source of type ODataAnnotation",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "maxAge": {
                                    "description": "Indicates that the client is unwilling to accept a response whose age is greater than the number of seconds specified in this field",
                                    "type": "number",
                                    "multipleOf": 1
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "crossNavigation": {
                        "description": "Represents cross navigation for inbound and outbound targets",
                        "type": "object",
                        "required": [
                          "inbounds"
                        ],
                        "properties": {
                          "inbounds": {
                            "description": "Represents cross navigation for inbound target",
                            "type": "object",
                            "patternProperties": {
                              "^[a-zA-Z0-9_\\.\\-]+$": {
                                "type": "object",
                                "description": "The combination of semantic object, action and parameter signature must ensure that intent-based navigation requests always identify inbounds in the surrounding crossNavigation object in a non-ambiguous manner",
                                "properties": {
                                  "semanticObject": {
                                    "description": "Represents semantic object",
                                    "type": "string",
                                    "pattern": "^[\\w\\*]{0,30}$"
                                  },
                                  "action": {
                                    "description": "Represents action an the semantic object",
                                    "type": "string",
                                    "pattern": "^[\\w\\*]{0,60}$"
                                  },
                                  "icon": {
                                    "description": "Represents icon",
                                    "type": "string"
                                  },
                                  "tileSize": {
                                    "description": "Size of the tile on the homepage",
                                    "type": "string",
                                    "enum": [
                                      "1x1",
                                      "1x2"
                                    ]
                                  },
                                  "title": {
                                    "description": "Represents language-dependent mandatory title, for example 'create Purchase Order'",
                                    "type": "string"
                                  },
                                  "shortTitle": {
                                    "description": "Represents a short version of the language-dependent title, for example 'create'",
                                    "type": "string"
                                  },
                                  "subTitle": {
                                    "description": "Represents language-dependent additional information to the title and can overwrite subTitle from sap.app definition",
                                    "type": "string"
                                  },
                                  "deviceTypes": {
                                    "description": "Represents device types for which application is developed",
                                    "type": "object",
                                    "properties": {
                                      "desktop": {
                                        "description": "Represents indicator whether desktop device is supported, default true",
                                        "type": "boolean"
                                      },
                                      "tablet": {
                                        "description": "Represents indicator whether tablet device is supported, default true",
                                        "type": "boolean"
                                      },
                                      "phone": {
                                        "description": "Represents indicator whether phone device is supported, default true",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "signature": {
                                    "description": "Represents signature for inbound targets ",
                                    "type": "object",
                                    "properties": {
                                      "parameters": {
                                        "type": "object",
                                        "patternProperties": {
                                          "^[\\w\\.\\-\\/]+$": {
                                            "type": "object",
                                            "properties": {
                                              "defaultValue": {
                                                "type": "object",
                                                "description": " Represents a default Value",
                                                "properties": {
                                                  "value": {
                                                    "description": "Represents a depending on format either a verbatim default value or a reference",
                                                    "type": "string"
                                                  },
                                                  "format": {
                                                    "description": "Indicates how 'value' is to be interpreted: ('plain': the 'value' is taken as a literal string value| 'reference': the 'value' is a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is used)",
                                                    "type": "string",
                                                    "enum": [
                                                      "plain",
                                                      "reference"
                                                    ]
                                                  }
                                                }
                                              },
                                              "filter": {
                                                "description": "Represents a filter , only if input parameter matches filter",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "Represents a depending on format either a verbatim filter value, a regular expression or a reference",
                                                    "type": "string"
                                                  },
                                                  "format": {
                                                    "type": "string",
                                                    "description": "Indicates how 'value' is to be interpreted: ('plain': the actual value must match the 'value' property directly| 'regexp': the 'value' represents a regexp which must be present in the actual value| 'reference' : the 'value' represents a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is then directly compared with the actual value)",
                                                    "enum": [
                                                      "plain",
                                                      "regexp",
                                                      "reference"
                                                    ]
                                                  }
                                                }
                                              },
                                              "launcherValue": {
                                                "type": "object",
                                                "description": " Represents a value to be used when creating a tile intent for this inbound",
                                                "properties": {
                                                  "value": {
                                                    "oneOf": [
                                                      {
                                                        "description": "Represents the definition of a single-value tile intent parameter; format property must be 'plain' in this case",
                                                        "type": "string"
                                                      },
                                                      {
                                                        "description": "Represents the definition of a multi-value tile intent parameter; format property must be 'array' in this case",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "format": {
                                                    "description": "Indicates how 'value' is to be interpreted: 'plain': the 'value' is taken as a literal string value | 'array': the 'value' is an array of strings",
                                                    "type": "string",
                                                    "enum": [
                                                      "plain",
                                                      "array"
                                                    ]
                                                  },
                                                  "prompt": {
                                                    "description": "DEPRECATED - Indicates the administrator should be prompted to supply a value when creating a tile",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "renameTo": {
                                                "description": "Represents the parameter name in legacy ABAP application, e.g. 'RF05L-BUKRS' for parameter 'CompanyCode'",
                                                "type": "string"
                                              },
                                              "required": {
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "additionalParameters": {
                                        "description": "Indicates how additional parameters to the declared signature are treated: ('ignored': parameters are not passed on to application | 'allowed': parameters are passed on to application | 'notallowed': additional parameters are not allowed)",
                                        "type": "string",
                                        "enum": [
                                          "ignored",
                                          "allowed",
                                          "notallowed"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "title": {
                        "description": "Represents a title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                        "type": "string"
                      },
                      "subTitle": {
                        "description": "Represents a subtitle to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                        "type": "string"
                      },
                      "info": {
                        "description": "Represents additional information to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Represents array of keywords",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "keywords"
                        ],
                        "properties": {
                          "keywords": {
                            "type": "array",
                            "items": {
                              "description": "Represents a tag; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "sap.ui": {
                    "title": "JSON schema for SAP.UI Namespace",
                    "description": "Represents general ui attributes",
                    "type": "object",
                    "properties": {
                      "technology": {
                        "description": "Represents UI technology. The possible values are UI5 (default), WDA, NWBC, GUI, URL and WCF",
                        "type": "string",
                        "enum": [
                          "UI5",
                          "WDA",
                          "NWBC",
                          "GUI",
                          "URL",
                          "WCF"
                        ],
                        "default": "UI5"
                      },
                      "icons": {
                        "description": "Represents icons which used in application",
                        "type": "object",
                        "properties": {
                          "icon": {
                            "description": "Represents icon of the app",
                            "type": "string"
                          },
                          "favIcon": {
                            "description": "Represents ICO file to be used inside the browser and for desktop shortcuts",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Represents 57x57 pixel version for non-retina iPhones",
                            "type": "string"
                          },
                          "phone@2": {
                            "description": "Represents 114x114 pixel version for non-retina iPhones",
                            "type": "string"
                          },
                          "tablet": {
                            "description": "Represents 72x72 pixel version for non-retina iPads",
                            "type": "string"
                          },
                          "tablet@2": {
                            "description": "Represents 144x144 pixel version for non-retina iPads",
                            "type": "string"
                          }
                        }
                      },
                      "deviceTypes": {
                        "description": "Represents device types on which application is running. Supported device types are desktop, tablet and phone",
                        "type": "object",
                        "properties": {
                          "desktop": {
                            "description": "Represents indicator whether desktop device is supported, default true",
                            "type": "boolean"
                          },
                          "tablet": {
                            "description": "Represents indicator whether tablet device is supported, default true",
                            "type": "boolean"
                          },
                          "phone": {
                            "description": "Represents indicator whether phone device is supported, default true",
                            "type": "boolean"
                          }
                        }
                      },
                      "fullWidth": {
                        "description": "Indicates whether app should run in full screen mode: possible values: true or false ",
                        "type": "boolean"
                      }
                    }
                  },
                  "sap.flp": {
                    "title": "JSON schema for SAP.FLP Namespace",
                    "description": "Represents FLP specific attributes",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Represents the type of FLP entry. It must be 'application' or 'tile' or 'plugin'",
                        "type": "string",
                        "enum": [
                          "application",
                          "tile",
                          "plugin"
                        ]
                      },
                      "config": {
                        "description": "Represents configuration parameters of the FLP entry",
                        "type": "object",
                        "patternProperties": {
                          "^[a-zA-Z0-9_.-]*$": {
                            "description": "Represents the configuration key and values",
                            "type": "object"
                          }
                        }
                      }
                    }
                  },
                  "sap.platform.cf": {
                    "title": "JSON schema for SAP.PLATFORM.CF Namespace",
                    "description": "Represents CF(Cloud Foundry) platform specific attributes",
                    "type": "object",
                    "properties": {
                      "oAuthScopes": {
                        "description": "Represents the authorization scope of the application",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sap.fiori": {
                    "title": "JSON schema for SAP.FIORI Namespace",
                    "description": "Represents SAP Fiori  specific attributes",
                    "type": "object",
                    "properties": {
                      "registrationIds": {
                        "description": "Represents array of registration ids, i.e. for Fiori apps fiori id(s)",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sap.url": {
                    "title": "JSON schema for SAP.URL Namespace",
                    "description": "Represents specific attributes for SAP URL",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "Represents URI of an application",
                        "type": "string"
                      }
                    }
                  }
                },
                "dependencies": {
                  "sap.integration": {
                    "not": {
                      "required": [
                        "sap.integrations"
                      ]
                    }
                  },
                  "sap.integrations": {
                    "not": {
                      "required": [
                        "sap.integration"
                      ]
                    }
                  }
                }
              },
              "targetAppConfig": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "description": "App Descriptor structure extended with sap.integration for URL template information",
                "type": "object",
                "properties": {
                  "reference": {
                    "type": "string",
                    "description": "A reference to the corresponding Application",
                    "examples": [
                      "sap.ushell.demo.hello.flp",
                      "cus.sd.billingdoclist.manages"
                    ]
                  },
                  "sap.integration": {
                    "type": "object",
                    "properties": {
                      "urlTemplateId": {
                        "description": "Reference to the desired URL Template",
                        "type": "string",
                        "examples": [
                          "urltemplate.ui5",
                          "urltemplate.wda",
                          "urltemplate.sfsf"
                        ]
                      },
                      "urlTemplateParams": {
                        "type": "object",
                        "description": "Parameters for the corresponding URL Template",
                        "patternProperties": {
                          "^[\\w\\W]*$": {
                            "oneOf": [
                              {
                                "type": "object",
                                "patternProperties": {
                                  "^[\\w\\W]*$": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "string"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        }
                      },
                      "navMode": {
                        "type": "string",
                        "enum": [
                          "inplace",
                          "explace"
                        ],
                        "default": "inplace"
                      }
                    }
                  },
                  "sap.integrations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "urlTemplateId": {
                              "description": "Reference to the desired URL Template",
                              "type": "string",
                              "examples": [
                                "urltemplate.ui5",
                                "urltemplate.wda",
                                "urltemplate.sfsf"
                              ]
                            },
                            "urlTemplateParams": {
                              "type": "object",
                              "description": "Parameters for the corresponding URL Template",
                              "patternProperties": {
                                "^[\\w\\W]*$": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "patternProperties": {
                                        "^[\\w\\W]*$": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              }
                            },
                            "navMode": {
                              "type": "string",
                              "enum": [
                                "inplace",
                                "explace"
                              ],
                              "default": "inplace"
                            }
                          }
                        }
                      ],
                      "properties": {
                        "urlTemplateDestination": {
                          "description": "Represents a system alias to be used for resolving this URL template",
                          "type": "string"
                        },
                        "urlTemplateId": {},
                        "urlTemplateParams": {},
                        "navMode": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "sap.app": {
                    "type": "object",
                    "title": "JSON schema for SAP.APP Namespace",
                    "description": "Represents general application attributes",
                    "properties": {
                      "id": {
                        "description": "Represents mandatory unique app identifier which must correspond to component 'id/namespace'",
                        "type": "string",
                        "maxLength": 70
                      },
                      "type": {
                        "description": "Represents type of an application and can be application or component or library",
                        "type": "string",
                        "enum": [
                          "application",
                          "component",
                          "library",
                          "card"
                        ]
                      },
                      "i18n": {
                        "oneOf": [
                          {
                            "description": "Represents the object detailing the properties of the language handling",
                            "type": "object",
                            "required": [
                              "bundleUrl"
                            ],
                            "properties": {
                              "bundleUrl": {
                                "type": "string",
                                "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor"
                              },
                              "supportedLocales": {
                                "type": "array",
                                "description": "An array of locale names which are supported",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fallbackLocale": {
                                "type": "string",
                                "description": "Represents the fallback language"
                              }
                            }
                          },
                          {
                            "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor",
                            "type": "string",
                            "default": "i18n/i18n.properties"
                          }
                        ]
                      },
                      "applicationVersion": {
                        "description": "Represents mandatory version of the app",
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string"
                          }
                        }
                      },
                      "ach": {
                        "description": "Represents application component hierarchy",
                        "type": "string",
                        "pattern": "^([a-zA-Z0-9]{2,3})(-[a-zA-Z0-9]{1,6})*$"
                      },
                      "dataSources": {
                        "description": "Represents used data sources with a unique key/alias",
                        "type": "object",
                        "patternProperties": {
                          "^[a-zA-Z0-9_\\.\\-]*$": {
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "Represents uri of the data source",
                                "type": "string"
                              },
                              "type": {
                                "description": "Represents type of the data source. The supported types are OData, ODataAnnotation, INA, XML, JSON",
                                "type": "string",
                                "enum": [
                                  "OData",
                                  "ODataAnnotation",
                                  "INA",
                                  "XML",
                                  "JSON",
                                  "FHIR",
                                  "http",
                                  "WebSocket"
                                ],
                                "default": "OData"
                              },
                              "settings": {
                                "description": "Represents data source type specific attributes (key, value pairs)",
                                "type": "object",
                                "properties": {
                                  "odataVersion": {
                                    "description": "Represents version of OData: 2.0 is default",
                                    "type": "string",
                                    "enum": [
                                      "2.0",
                                      "4.0"
                                    ]
                                  },
                                  "localUri": {
                                    "description": "Represents path to local meta data document or annotation uri",
                                    "type": "string"
                                  },
                                  "annotations": {
                                    "description": "Represents  array of annotation which references an existing data source of type ODataAnnotation",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "maxAge": {
                                    "description": "Indicates that the client is unwilling to accept a response whose age is greater than the number of seconds specified in this field",
                                    "type": "number",
                                    "multipleOf": 1
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "crossNavigation": {
                        "description": "Represents cross navigation for inbound and outbound targets",
                        "type": "object",
                        "required": [
                          "inbounds"
                        ],
                        "properties": {
                          "inbounds": {
                            "description": "Represents cross navigation for inbound target",
                            "type": "object",
                            "patternProperties": {
                              "^[a-zA-Z0-9_\\.\\-]+$": {
                                "type": "object",
                                "description": "The combination of semantic object, action and parameter signature must ensure that intent-based navigation requests always identify inbounds in the surrounding crossNavigation object in a non-ambiguous manner",
                                "properties": {
                                  "semanticObject": {
                                    "description": "Represents semantic object",
                                    "type": "string",
                                    "pattern": "^[\\w\\*]{0,30}$"
                                  },
                                  "action": {
                                    "description": "Represents action an the semantic object",
                                    "type": "string",
                                    "pattern": "^[\\w\\*]{0,60}$"
                                  },
                                  "icon": {
                                    "description": "Represents icon",
                                    "type": "string"
                                  },
                                  "tileSize": {
                                    "description": "Size of the tile on the homepage",
                                    "type": "string",
                                    "enum": [
                                      "1x1",
                                      "1x2"
                                    ]
                                  },
                                  "title": {
                                    "description": "Represents language-dependent mandatory title, for example 'create Purchase Order'",
                                    "type": "string"
                                  },
                                  "shortTitle": {
                                    "description": "Represents a short version of the language-dependent title, for example 'create'",
                                    "type": "string"
                                  },
                                  "subTitle": {
                                    "description": "Represents language-dependent additional information to the title and can overwrite subTitle from sap.app definition",
                                    "type": "string"
                                  },
                                  "deviceTypes": {
                                    "description": "Represents device types for which application is developed",
                                    "type": "object",
                                    "properties": {
                                      "desktop": {
                                        "description": "Represents indicator whether desktop device is supported, default true",
                                        "type": "boolean"
                                      },
                                      "tablet": {
                                        "description": "Represents indicator whether tablet device is supported, default true",
                                        "type": "boolean"
                                      },
                                      "phone": {
                                        "description": "Represents indicator whether phone device is supported, default true",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "signature": {
                                    "description": "Represents signature for inbound targets ",
                                    "type": "object",
                                    "properties": {
                                      "parameters": {
                                        "type": "object",
                                        "patternProperties": {
                                          "^[\\w\\.\\-\\/]+$": {
                                            "type": "object",
                                            "properties": {
                                              "defaultValue": {
                                                "type": "object",
                                                "description": " Represents a default Value",
                                                "properties": {
                                                  "value": {
                                                    "description": "Represents a depending on format either a verbatim default value or a reference",
                                                    "type": "string"
                                                  },
                                                  "format": {
                                                    "description": "Indicates how 'value' is to be interpreted: ('plain': the 'value' is taken as a literal string value| 'reference': the 'value' is a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is used)",
                                                    "type": "string",
                                                    "enum": [
                                                      "plain",
                                                      "reference"
                                                    ]
                                                  }
                                                }
                                              },
                                              "filter": {
                                                "description": "Represents a filter , only if input parameter matches filter",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "Represents a depending on format either a verbatim filter value, a regular expression or a reference",
                                                    "type": "string"
                                                  },
                                                  "format": {
                                                    "type": "string",
                                                    "description": "Indicates how 'value' is to be interpreted: ('plain': the actual value must match the 'value' property directly| 'regexp': the 'value' represents a regexp which must be present in the actual value| 'reference' : the 'value' represents a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is then directly compared with the actual value)",
                                                    "enum": [
                                                      "plain",
                                                      "regexp",
                                                      "reference"
                                                    ]
                                                  }
                                                }
                                              },
                                              "launcherValue": {
                                                "type": "object",
                                                "description": " Represents a value to be used when creating a tile intent for this inbound",
                                                "properties": {
                                                  "value": {
                                                    "oneOf": [
                                                      {
                                                        "description": "Represents the definition of a single-value tile intent parameter; format property must be 'plain' in this case",
                                                        "type": "string"
                                                      },
                                                      {
                                                        "description": "Represents the definition of a multi-value tile intent parameter; format property must be 'array' in this case",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "format": {
                                                    "description": "Indicates how 'value' is to be interpreted: 'plain': the 'value' is taken as a literal string value | 'array': the 'value' is an array of strings",
                                                    "type": "string",
                                                    "enum": [
                                                      "plain",
                                                      "array"
                                                    ]
                                                  },
                                                  "prompt": {
                                                    "description": "DEPRECATED - Indicates the administrator should be prompted to supply a value when creating a tile",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "renameTo": {
                                                "description": "Represents the parameter name in legacy ABAP application, e.g. 'RF05L-BUKRS' for parameter 'CompanyCode'",
                                                "type": "string"
                                              },
                                              "required": {
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "additionalParameters": {
                                        "description": "Indicates how additional parameters to the declared signature are treated: ('ignored': parameters are not passed on to application | 'allowed': parameters are passed on to application | 'notallowed': additional parameters are not allowed)",
                                        "type": "string",
                                        "enum": [
                                          "ignored",
                                          "allowed",
                                          "notallowed"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "title": {
                        "description": "Represents a title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                        "type": "string"
                      },
                      "subTitle": {
                        "description": "Represents a subtitle to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                        "type": "string"
                      },
                      "info": {
                        "description": "Represents additional information to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Represents array of keywords",
                        "type": "object",
                        "additionalProperties": true,
                        "required": [
                          "keywords"
                        ],
                        "properties": {
                          "keywords": {
                            "type": "array",
                            "items": {
                              "description": "Represents a tag; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "sap.ui": {
                    "title": "JSON schema for SAP.UI Namespace",
                    "description": "Represents general ui attributes",
                    "type": "object",
                    "properties": {
                      "technology": {
                        "description": "Represents UI technology. The possible values are UI5 (default), WDA, NWBC, GUI, URL and WCF",
                        "type": "string",
                        "enum": [
                          "UI5",
                          "WDA",
                          "NWBC",
                          "GUI",
                          "URL",
                          "WCF"
                        ],
                        "default": "UI5"
                      },
                      "icons": {
                        "description": "Represents icons which used in application",
                        "type": "object",
                        "properties": {
                          "icon": {
                            "description": "Represents icon of the app",
                            "type": "string"
                          },
                          "favIcon": {
                            "description": "Represents ICO file to be used inside the browser and for desktop shortcuts",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Represents 57x57 pixel version for non-retina iPhones",
                            "type": "string"
                          },
                          "phone@2": {
                            "description": "Represents 114x114 pixel version for non-retina iPhones",
                            "type": "string"
                          },
                          "tablet": {
                            "description": "Represents 72x72 pixel version for non-retina iPads",
                            "type": "string"
                          },
                          "tablet@2": {
                            "description": "Represents 144x144 pixel version for non-retina iPads",
                            "type": "string"
                          }
                        }
                      },
                      "deviceTypes": {
                        "description": "Represents device types on which application is running. Supported device types are desktop, tablet and phone",
                        "type": "object",
                        "properties": {
                          "desktop": {
                            "description": "Represents indicator whether desktop device is supported, default true",
                            "type": "boolean"
                          },
                          "tablet": {
                            "description": "Represents indicator whether tablet device is supported, default true",
                            "type": "boolean"
                          },
                          "phone": {
                            "description": "Represents indicator whether phone device is supported, default true",
                            "type": "boolean"
                          }
                        }
                      },
                      "fullWidth": {
                        "description": "Indicates whether app should run in full screen mode: possible values: true or false ",
                        "type": "boolean"
                      }
                    }
                  },
                  "sap.flp": {
                    "title": "JSON schema for SAP.FLP Namespace",
                    "description": "Represents FLP specific attributes",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Represents the type of FLP entry. It must be 'application' or 'tile' or 'plugin'",
                        "type": "string",
                        "enum": [
                          "application",
                          "tile",
                          "plugin"
                        ]
                      },
                      "config": {
                        "description": "Represents configuration parameters of the FLP entry",
                        "type": "object",
                        "patternProperties": {
                          "^[a-zA-Z0-9_.-]*$": {
                            "description": "Represents the configuration key and values",
                            "type": "object"
                          }
                        }
                      }
                    }
                  },
                  "sap.platform.cf": {
                    "title": "JSON schema for SAP.PLATFORM.CF Namespace",
                    "description": "Represents CF(Cloud Foundry) platform specific attributes",
                    "type": "object",
                    "properties": {
                      "oAuthScopes": {
                        "description": "Represents the authorization scope of the application",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sap.fiori": {
                    "title": "JSON schema for SAP.FIORI Namespace",
                    "description": "Represents SAP Fiori  specific attributes",
                    "type": "object",
                    "properties": {
                      "registrationIds": {
                        "description": "Represents array of registration ids, i.e. for Fiori apps fiori id(s)",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sap.url": {
                    "title": "JSON schema for SAP.URL Namespace",
                    "description": "Represents specific attributes for SAP URL",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "Represents URI of an application",
                        "type": "string"
                      }
                    }
                  }
                },
                "dependencies": {
                  "sap.integration": {
                    "not": {
                      "required": [
                        "sap.integrations"
                      ]
                    }
                  },
                  "sap.integrations": {
                    "not": {
                      "required": [
                        "sap.integration"
                      ]
                    }
                  }
                }
              },
              "visualizations": {
                "type": "object",
                "description": "App Visualizations - abstraction of controls for launching apps",
                "patternProperties": {
                  "^(.*)$": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "Visualization",
                    "description": "Abstraction of controls for launching apps",
                    "type": "object",
                    "required": [
                      "vizType",
                      "vizConfig"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "vizType": {
                        "type": "string",
                        "description": "Reference to a concrete visualization type",
                        "examples": [
                          "sap.ushell.StaticAppLauncher",
                          "sap.ushell.DynamicAppLauncher",
                          "sap.card"
                        ]
                      },
                      "vizConfig": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Visualization Configuration",
                        "description": "Configuration of a visualization consisting of an App Descriptor structure extended with sap.flp for information about the visualized navigation target",
                        "type": "object",
                        "properties": {
                          "reference": {
                            "type": "string",
                            "description": "A reference to the corresponding Application",
                            "examples": [
                              "sap.ushell.demo.hello.flp",
                              "cus.sd.billingdoclist.manages"
                            ]
                          },
                          "sap.integration": {
                            "type": "object",
                            "properties": {
                              "urlTemplateId": {
                                "description": "Reference to the desired URL Template",
                                "type": "string",
                                "examples": [
                                  "urltemplate.ui5",
                                  "urltemplate.wda",
                                  "urltemplate.sfsf"
                                ]
                              },
                              "urlTemplateParams": {
                                "type": "object",
                                "description": "Parameters for the corresponding URL Template",
                                "patternProperties": {
                                  "^[\\w\\W]*$": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "patternProperties": {
                                          "^[\\w\\W]*$": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                }
                              },
                              "navMode": {
                                "type": "string",
                                "enum": [
                                  "inplace",
                                  "explace"
                                ],
                                "default": "inplace"
                              }
                            }
                          },
                          "sap.integrations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "urlTemplateId": {
                                      "description": "Reference to the desired URL Template",
                                      "type": "string",
                                      "examples": [
                                        "urltemplate.ui5",
                                        "urltemplate.wda",
                                        "urltemplate.sfsf"
                                      ]
                                    },
                                    "urlTemplateParams": {
                                      "type": "object",
                                      "description": "Parameters for the corresponding URL Template",
                                      "patternProperties": {
                                        "^[\\w\\W]*$": {
                                          "oneOf": [
                                            {
                                              "type": "object",
                                              "patternProperties": {
                                                "^[\\w\\W]*$": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "navMode": {
                                      "type": "string",
                                      "enum": [
                                        "inplace",
                                        "explace"
                                      ],
                                      "default": "inplace"
                                    }
                                  }
                                }
                              ],
                              "properties": {
                                "urlTemplateDestination": {
                                  "description": "Represents a system alias to be used for resolving this URL template",
                                  "type": "string"
                                },
                                "urlTemplateId": {},
                                "urlTemplateParams": {},
                                "navMode": {}
                              },
                              "additionalProperties": false
                            }
                          },
                          "sap.app": {
                            "type": "object",
                            "title": "JSON schema for SAP.APP Namespace",
                            "description": "Represents general application attributes",
                            "properties": {
                              "id": {
                                "description": "Represents mandatory unique app identifier which must correspond to component 'id/namespace'",
                                "type": "string",
                                "maxLength": 70
                              },
                              "type": {
                                "description": "Represents type of an application and can be application or component or library",
                                "type": "string",
                                "enum": [
                                  "application",
                                  "component",
                                  "library",
                                  "card"
                                ]
                              },
                              "i18n": {
                                "oneOf": [
                                  {
                                    "description": "Represents the object detailing the properties of the language handling",
                                    "type": "object",
                                    "required": [
                                      "bundleUrl"
                                    ],
                                    "properties": {
                                      "bundleUrl": {
                                        "type": "string",
                                        "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor"
                                      },
                                      "supportedLocales": {
                                        "type": "array",
                                        "description": "An array of locale names which are supported",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "fallbackLocale": {
                                        "type": "string",
                                        "description": "Represents the fallback language"
                                      }
                                    }
                                  },
                                  {
                                    "description": "Represents path inside the app to the properties file containing text symbols for the Descriptor",
                                    "type": "string",
                                    "default": "i18n/i18n.properties"
                                  }
                                ]
                              },
                              "applicationVersion": {
                                "description": "Represents mandatory version of the app",
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "type": "string"
                                  }
                                }
                              },
                              "ach": {
                                "description": "Represents application component hierarchy",
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9]{2,3})(-[a-zA-Z0-9]{1,6})*$"
                              },
                              "dataSources": {
                                "description": "Represents used data sources with a unique key/alias",
                                "type": "object",
                                "patternProperties": {
                                  "^[a-zA-Z0-9_\\.\\-]*$": {
                                    "type": "object",
                                    "properties": {
                                      "uri": {
                                        "description": "Represents uri of the data source",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Represents type of the data source. The supported types are OData, ODataAnnotation, INA, XML, JSON",
                                        "type": "string",
                                        "enum": [
                                          "OData",
                                          "ODataAnnotation",
                                          "INA",
                                          "XML",
                                          "JSON",
                                          "FHIR",
                                          "http",
                                          "WebSocket"
                                        ],
                                        "default": "OData"
                                      },
                                      "settings": {
                                        "description": "Represents data source type specific attributes (key, value pairs)",
                                        "type": "object",
                                        "properties": {
                                          "odataVersion": {
                                            "description": "Represents version of OData: 2.0 is default",
                                            "type": "string",
                                            "enum": [
                                              "2.0",
                                              "4.0"
                                            ]
                                          },
                                          "localUri": {
                                            "description": "Represents path to local meta data document or annotation uri",
                                            "type": "string"
                                          },
                                          "annotations": {
                                            "description": "Represents  array of annotation which references an existing data source of type ODataAnnotation",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "maxAge": {
                                            "description": "Indicates that the client is unwilling to accept a response whose age is greater than the number of seconds specified in this field",
                                            "type": "number",
                                            "multipleOf": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "crossNavigation": {
                                "description": "Represents cross navigation for inbound and outbound targets",
                                "type": "object",
                                "required": [
                                  "inbounds"
                                ],
                                "properties": {
                                  "inbounds": {
                                    "description": "Represents cross navigation for inbound target",
                                    "type": "object",
                                    "patternProperties": {
                                      "^[a-zA-Z0-9_\\.\\-]+$": {
                                        "type": "object",
                                        "description": "The combination of semantic object, action and parameter signature must ensure that intent-based navigation requests always identify inbounds in the surrounding crossNavigation object in a non-ambiguous manner",
                                        "properties": {
                                          "semanticObject": {
                                            "description": "Represents semantic object",
                                            "type": "string",
                                            "pattern": "^[\\w\\*]{0,30}$"
                                          },
                                          "action": {
                                            "description": "Represents action an the semantic object",
                                            "type": "string",
                                            "pattern": "^[\\w\\*]{0,60}$"
                                          },
                                          "icon": {
                                            "description": "Represents icon",
                                            "type": "string"
                                          },
                                          "tileSize": {
                                            "description": "Size of the tile on the homepage",
                                            "type": "string",
                                            "enum": [
                                              "1x1",
                                              "1x2"
                                            ]
                                          },
                                          "title": {
                                            "description": "Represents language-dependent mandatory title, for example 'create Purchase Order'",
                                            "type": "string"
                                          },
                                          "shortTitle": {
                                            "description": "Represents a short version of the language-dependent title, for example 'create'",
                                            "type": "string"
                                          },
                                          "subTitle": {
                                            "description": "Represents language-dependent additional information to the title and can overwrite subTitle from sap.app definition",
                                            "type": "string"
                                          },
                                          "deviceTypes": {
                                            "description": "Represents device types for which application is developed",
                                            "type": "object",
                                            "properties": {
                                              "desktop": {
                                                "description": "Represents indicator whether desktop device is supported, default true",
                                                "type": "boolean"
                                              },
                                              "tablet": {
                                                "description": "Represents indicator whether tablet device is supported, default true",
                                                "type": "boolean"
                                              },
                                              "phone": {
                                                "description": "Represents indicator whether phone device is supported, default true",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "signature": {
                                            "description": "Represents signature for inbound targets ",
                                            "type": "object",
                                            "properties": {
                                              "parameters": {
                                                "type": "object",
                                                "patternProperties": {
                                                  "^[\\w\\.\\-\\/]+$": {
                                                    "type": "object",
                                                    "properties": {
                                                      "defaultValue": {
                                                        "type": "object",
                                                        "description": " Represents a default Value",
                                                        "properties": {
                                                          "value": {
                                                            "description": "Represents a depending on format either a verbatim default value or a reference",
                                                            "type": "string"
                                                          },
                                                          "format": {
                                                            "description": "Indicates how 'value' is to be interpreted: ('plain': the 'value' is taken as a literal string value| 'reference': the 'value' is a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is used)",
                                                            "type": "string",
                                                            "enum": [
                                                              "plain",
                                                              "reference"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "filter": {
                                                        "description": "Represents a filter , only if input parameter matches filter",
                                                        "type": "object",
                                                        "properties": {
                                                          "value": {
                                                            "description": "Represents a depending on format either a verbatim filter value, a regular expression or a reference",
                                                            "type": "string"
                                                          },
                                                          "format": {
                                                            "type": "string",
                                                            "description": "Indicates how 'value' is to be interpreted: ('plain': the actual value must match the 'value' property directly| 'regexp': the 'value' represents a regexp which must be present in the actual value| 'reference' : the 'value' represents a reference to e.g. a UserDefault parameter (e.g. 'UserDefault.CostCenter'), the resolved parameter value is then directly compared with the actual value)",
                                                            "enum": [
                                                              "plain",
                                                              "regexp",
                                                              "reference"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "launcherValue": {
                                                        "type": "object",
                                                        "description": " Represents a value to be used when creating a tile intent for this inbound",
                                                        "properties": {
                                                          "value": {
                                                            "oneOf": [
                                                              {
                                                                "description": "Represents the definition of a single-value tile intent parameter; format property must be 'plain' in this case",
                                                                "type": "string"
                                                              },
                                                              {
                                                                "description": "Represents the definition of a multi-value tile intent parameter; format property must be 'array' in this case",
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "format": {
                                                            "description": "Indicates how 'value' is to be interpreted: 'plain': the 'value' is taken as a literal string value | 'array': the 'value' is an array of strings",
                                                            "type": "string",
                                                            "enum": [
                                                              "plain",
                                                              "array"
                                                            ]
                                                          },
                                                          "prompt": {
                                                            "description": "DEPRECATED - Indicates the administrator should be prompted to supply a value when creating a tile",
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      },
                                                      "renameTo": {
                                                        "description": "Represents the parameter name in legacy ABAP application, e.g. 'RF05L-BUKRS' for parameter 'CompanyCode'",
                                                        "type": "string"
                                                      },
                                                      "required": {
                                                        "type": "boolean"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "additionalParameters": {
                                                "description": "Indicates how additional parameters to the declared signature are treated: ('ignored': parameters are not passed on to application | 'allowed': parameters are passed on to application | 'notallowed': additional parameters are not allowed)",
                                                "type": "string",
                                                "enum": [
                                                  "ignored",
                                                  "allowed",
                                                  "notallowed"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "title": {
                                "description": "Represents a title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                                "type": "string"
                              },
                              "subTitle": {
                                "description": "Represents a subtitle to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                                "type": "string"
                              },
                              "info": {
                                "description": "Represents additional information to the title; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                                "type": "string"
                              },
                              "tags": {
                                "description": "Represents array of keywords",
                                "type": "object",
                                "additionalProperties": true,
                                "required": [
                                  "keywords"
                                ],
                                "properties": {
                                  "keywords": {
                                    "type": "array",
                                    "items": {
                                      "description": "Represents a tag; to make this property language dependent (recommended), use a key in double curly brackets '{{key}}'",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "sap.ui": {
                            "title": "JSON schema for SAP.UI Namespace",
                            "description": "Represents general ui attributes",
                            "type": "object",
                            "properties": {
                              "technology": {
                                "description": "Represents UI technology. The possible values are UI5 (default), WDA, NWBC, GUI, URL and WCF",
                                "type": "string",
                                "enum": [
                                  "UI5",
                                  "WDA",
                                  "NWBC",
                                  "GUI",
                                  "URL",
                                  "WCF"
                                ],
                                "default": "UI5"
                              },
                              "icons": {
                                "description": "Represents icons which used in application",
                                "type": "object",
                                "properties": {
                                  "icon": {
                                    "description": "Represents icon of the app",
                                    "type": "string"
                                  },
                                  "favIcon": {
                                    "description": "Represents ICO file to be used inside the browser and for desktop shortcuts",
                                    "type": "string"
                                  },
                                  "phone": {
                                    "description": "Represents 57x57 pixel version for non-retina iPhones",
                                    "type": "string"
                                  },
                                  "phone@2": {
                                    "description": "Represents 114x114 pixel version for non-retina iPhones",
                                    "type": "string"
                                  },
                                  "tablet": {
                                    "description": "Represents 72x72 pixel version for non-retina iPads",
                                    "type": "string"
                                  },
                                  "tablet@2": {
                                    "description": "Represents 144x144 pixel version for non-retina iPads",
                                    "type": "string"
                                  }
                                }
                              },
                              "deviceTypes": {
                                "description": "Represents device types on which application is running. Supported device types are desktop, tablet and phone",
                                "type": "object",
                                "properties": {
                                  "desktop": {
                                    "description": "Represents indicator whether desktop device is supported, default true",
                                    "type": "boolean"
                                  },
                                  "tablet": {
                                    "description": "Represents indicator whether tablet device is supported, default true",
                                    "type": "boolean"
                                  },
                                  "phone": {
                                    "description": "Represents indicator whether phone device is supported, default true",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "fullWidth": {
                                "description": "Indicates whether app should run in full screen mode: possible values: true or false ",
                                "type": "boolean"
                              }
                            }
                          },
                          "sap.flp": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "inboundId"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "navigation type - Intent Based Navigation",
                                        "enum": [
                                          "IBN"
                                        ]
                                      },
                                      "inboundId": {
                                        "type": "string",
                                        "description": "Reference of the desired inbound"
                                      },
                                      "parameters": {
                                        "type": "object",
                                        "description": "Parameter values to pass on launch of the application",
                                        "patternProperties": {
                                          "^[\\w\\.\\-\\/]+$": {
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "description": "Value of a parameter (param=value)",
                                                "oneOf": [
                                                  {
                                                    "properties": {
                                                      "format": {
                                                        "type": "string",
                                                        "const": "plain"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "properties": {
                                                      "format": {
                                                        "type": "string",
                                                        "const": "array"
                                                      },
                                                      "value": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "$comment": "DEPRECATED - Instead of this representation use the alternative with a flat value property",
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                  "value": {
                                                    "type": "object",
                                                    "description": "Value of a parameter (param=value)",
                                                    "oneOf": [
                                                      {
                                                        "properties": {
                                                          "format": {
                                                            "type": "string",
                                                            "const": "plain"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "properties": {
                                                          "format": {
                                                            "type": "string",
                                                            "const": "array"
                                                          },
                                                          "value": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "url"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "navigation type - URL Based Navigation",
                                        "enum": [
                                          "URL"
                                        ]
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "The target URL which will be opened in a new tab"
                                      },
                                      "parameters": {
                                        "type": "object",
                                        "description": "URL parameters which will be added to the URL on build, and will be omitted in RT format",
                                        "patternProperties": {
                                          "^(.*)$": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "indicatorDataSource": {
                                "type": "object",
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "dataSource": {
                                    "type": "string",
                                    "description": "Data source for the indicator data source. If omitted, the address of the indicator data source is fully determined by the path"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "refresh": {
                                    "type": "number"
                                  }
                                }
                              },
                              "numberUnit": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                                  },
                                  {
                                    "description": "Fixed, untranslated string in specific language",
                                    "type": "string"
                                  }
                                ]
                              },
                              "vizOptions": {
                                "description": "Options a visualization is offering with regards to rendering, for example",
                                "type": "object",
                                "properties": {
                                  "displayFormats": {
                                    "description": "Defines what display formats a visualization type can render itself in. The value 'default' is deprecated - please use 'standard' instead!",
                                    "type": "object",
                                    "properties": {
                                      "default": {
                                        "type": "string",
                                        "enum": [
                                          "default",
                                          "standard",
                                          "standardWide",
                                          "flat",
                                          "flatWide",
                                          "compact"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "sap.platform.cf": {
                            "title": "JSON schema for SAP.PLATFORM.CF Namespace",
                            "description": "Represents CF(Cloud Foundry) platform specific attributes",
                            "type": "object",
                            "properties": {
                              "oAuthScopes": {
                                "description": "Represents the authorization scope of the application",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "sap.fiori": {
                            "title": "JSON schema for SAP.FIORI Namespace",
                            "description": "Represents SAP Fiori  specific attributes",
                            "type": "object",
                            "properties": {
                              "registrationIds": {
                                "description": "Represents array of registration ids, i.e. for Fiori apps fiori id(s)",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "sap.url": {
                            "title": "JSON schema for SAP.URL Namespace",
                            "description": "Represents specific attributes for SAP URL",
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "Represents URI of an application",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "vizResources": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "Reference to an artifact declared as content item in the manifest of the content package that contains this visualization"
                          },
                          "baseURL": {
                            "type": "string",
                            "description": "Location where to retrieve additional resources for the visualization, e.g. for card visualizations. The value is a URL that always ends with a slash; a relative URL also starts with a slash. If the value is a relative URL, it MUST be complemented by a property destination which takes a logical destination name as value"
                          },
                          "destination": {
                            "type": "string",
                            "description": "Logical destination name, which must be provided in case the baseURL property is a relative URL"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultViz": {
                "type": "string",
                "description": "ID of the default visualization for the current application"
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "role",
        "type": "object",
        "description": "Roles define the set of apps that a user (with specific roles) is allowed to use",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.0.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1",
              "3.0.1",
              "3.0.0",
              "3.0"
            ]
          },
          "identification": {
            "type": "object",
            "description": "Identifier and other meta attributes for roles; adapted ID character set from general definition found in `identification.json`",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "role"
                ]
              },
              "id": {
                "description": "ID of the entity, needs to be unique across all roles in content package",
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/&()=,;<>?]+$"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            }
          },
          "payload": {
            "type": "object",
            "required": [
              "apps"
            ],
            "properties": {
              "catalogs": {
                "description": "a list of the assigned content catalogs",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              },
              "groups": {
                "description": "a list of the assigned groups",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              },
              "spaces": {
                "description": "a list of the assigned spaces",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              },
              "apps": {
                "description": "a list of the assigned business apps",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              },
              "relatedRoleAssignments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "group",
        "type": "object",
        "description": "Groups define how and what visualizations of apps are grouped in the launchpad home page",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.0.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1",
              "3.0.1",
              "3.0.0",
              "3.0"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "type": "object",
            "anyOf": [
              {
                "required": [
                  "viz"
                ]
              }
            ],
            "properties": {
              "viz": {
                "description": "a list of the assigned app visualizations",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "appId",
                    "vizId"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    },
                    "appId": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    },
                    "vizId": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    },
                    "displayFormatHint": {
                      "type": "string",
                      "enum": [
                        "default",
                        "standard",
                        "standardWide",
                        "flat",
                        "flatWide",
                        "compact"
                      ],
                      "description": "A hint for how this vizReference should be displayed; compact format could be rendered as link"
                    }
                  }
                }
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "catalog",
        "type": "object",
        "description": "Catalogs define how and what visualizations of apps are grouped in the app-finder",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.0.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1",
              "3.0.1",
              "3.0.0",
              "3.0"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "type": "object",
            "required": [
              "viz"
            ],
            "properties": {
              "viz": {
                "description": "a list of the assigned app visualizations",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "appId",
                    "vizId"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    },
                    "appId": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    },
                    "vizId": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "space",
        "type": "object",
        "description": "Spaces are grouping content, currently only pages",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.1.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "type": "object",
            "required": [
              "contentNodes"
            ],
            "properties": {
              "spaceConfig": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Space Configuration",
                "description": "Configuration of a space",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "title": {
                    "description": "Represents the title of the Space",
                    "type": "string",
                    "default": ""
                  },
                  "description": {
                    "description": "Represents an additional description of the Space ",
                    "type": "string",
                    "default": ""
                  },
                  "mergeId": {
                    "description": "Entities of the same entity type with the same merge-ID may be merged",
                    "type": "string",
                    "maxLength": 35,
                    "pattern": "^[\\w\\-:@+~.#\\/]+$"
                  },
                  "sortNumber": {
                    "description": "Determines an order of all spaces: The space comes after other spaces with smaller sortNumber and before spaces with larger sortNumber; spaces with no sort number come after all spaces with a sortNumber.",
                    "type": "number",
                    "multipleOf": 0.00001,
                    "exclusiveMinimum": -10000,
                    "exclusiveMaximum": 10000
                  }
                }
              },
              "contentNodes": {
                "description": "List of the assigned content nodes; so far restricted to a flat list of pages, might be extended in subsequent versions",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "enum": [
                        "page",
                        "workpage"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    }
                  }
                }
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "page",
        "type": "object",
        "description": "Pages define the layout of sections",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.1.0",
            "enum": [
              "3.2.0",
              "3.2",
              "3.1.0",
              "3.1"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "type": "object",
            "required": [
              "sections"
            ],
            "properties": {
              "sections": {
                "description": "a list of the assigned page sections",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$"
                    },
                    "title": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                        },
                        {
                          "description": "Fixed, untranslated string in specific language",
                          "type": "string"
                        }
                      ]
                    },
                    "viz": {
                      "description": "a list of the assigned app visualizations",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "appId",
                          "vizId"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "maxLength": 70,
                            "pattern": "^[\\w\\-:@+~.#\\/]+$"
                          },
                          "appId": {
                            "type": "string",
                            "maxLength": 70,
                            "pattern": "^[\\w\\-:@+~.#\\/]+$"
                          },
                          "vizId": {
                            "type": "string",
                            "maxLength": 70,
                            "pattern": "^[\\w\\-:@+~.#\\/]+$"
                          },
                          "displayFormatHint": {
                            "type": "string",
                            "enum": [
                              "default",
                              "standard",
                              "standardWide",
                              "flat",
                              "flatWide",
                              "compact"
                            ],
                            "description": "A hint for how this vizReference should be displayed; compact format could be rendered as link"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "mergeId": {
                "description": "Entities of the same entity type with the same merge-ID may be merged",
                "type": "string",
                "maxLength": 35,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "workpage",
        "type": "object",
        "description": "Work pages define how visualizations are placed in a structure organized by rows, columns, and cells",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.2.0",
            "enum": [
              "3.2.0",
              "3.2"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "type": "object",
            "required": [
              "workpageConfig",
              "rows"
            ],
            "properties": {
              "workpageConfig": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Work Page Configuration",
                "description": "Configuration of a work page",
                "type": "object",
                "required": [
                  "title"
                ],
                "additionalProperties": false,
                "properties": {
                  "title": {
                    "description": "Represents the title of the WorkPage",
                    "type": "string",
                    "default": ""
                  },
                  "description": {
                    "description": "Represents an additional description of the WorkPage ",
                    "type": "string",
                    "default": ""
                  },
                  "mergeId": {
                    "description": "Entities of the same entity type with the same merge-ID may be merged",
                    "type": "string",
                    "maxLength": 35,
                    "pattern": "^[\\w\\-:@+~.#\\/]+$"
                  }
                }
              },
              "rows": {
                "description": "rows of the page",
                "type": "array",
                "items": {
                  "description": "row of a work page",
                  "type": "object",
                  "required": [
                    "id",
                    "rowConfig",
                    "columns"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 70,
                      "pattern": "^[\\w\\-:@+~.#\\/]+$",
                      "description": "ID of the row; it needs to be stable over the entire lifecycle of the row and unique in relation to all other rows contained in the same work page"
                    },
                    "rowConfig": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "Work Page Row Configuration",
                      "description": "Configuration of a work page row",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "title": {
                          "description": "Represents the title of the Row",
                          "type": "string"
                        },
                        "info": {
                          "description": "Represents an additional info of the Row shown next to the title",
                          "type": "string",
                          "default": ""
                        },
                        "fillRowHeight": {
                          "description": "Indicates whether the last Widget contained in each Column->Cell of this Row should stretch to the height of the row. This visually unifies the height of all contents.",
                          "type": "boolean",
                          "default": true
                        },
                        "fullWidth": {
                          "description": "Visually expands the Rows width to the maximum available width. The expansion only applies to background setting",
                          "type": "boolean",
                          "default": false
                        },
                        "backgroundColor": {
                          "description": "CSS color value used as a background for this Row",
                          "type": "string",
                          "default": ""
                        },
                        "backgroundURL": {
                          "description": "Url to a background image for this Row",
                          "type": "string",
                          "format": "uri-reference",
                          "default": ""
                        },
                        "paddingTop": {
                          "description": "Padding on top of the Row",
                          "type": "string",
                          "default": ""
                        },
                        "paddingBottom": {
                          "description": "Padding on bottom of the Row",
                          "type": "string",
                          "default": ""
                        }
                      }
                    },
                    "columns": {
                      "description": "columns of the row",
                      "type": "array",
                      "items": {
                        "description": "column of a row",
                        "type": "object",
                        "required": [
                          "id",
                          "columnConfig",
                          "cells"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "maxLength": 70,
                            "pattern": "^[\\w\\-:@+~.#\\/]+$",
                            "description": "ID of the column; it needs to be stable over the entire lifecycle of the column and unique in relation to all other columns contained in the same work page"
                          },
                          "columnConfig": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Work Page Column Configuration",
                            "description": "Configuration of a work page column",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "columnWidth": {
                                "description": "An even number between 4 and 24 to indicate the width of the column. The columnWidth of all columns in a row should add up to 24",
                                "type": "number",
                                "multipleOf": 2,
                                "minimum": 4,
                                "maximum": 24
                              }
                            }
                          },
                          "cells": {
                            "description": "cells contained in the column",
                            "type": "array",
                            "items": {
                              "description": "cell in a column",
                              "type": "object",
                              "required": [
                                "id",
                                "cellConfig",
                                "widgets"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 70,
                                  "pattern": "^[\\w\\-:@+~.#\\/]+$",
                                  "description": "ID of the cell; it needs to be stable over the entire lifecycle of the cell and unique in relation to all other cells contained in the same work page"
                                },
                                "cellConfig": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "Work Page Cell Configuration",
                                  "description": "Configuration of a work page cell",
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {}
                                },
                                "widgets": {
                                  "description": "widgets contained in the cell",
                                  "type": "array",
                                  "items": {
                                    "description": "widget as a usage of a visualization placed in a cell",
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "viz"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "maxLength": 70,
                                        "pattern": "^[\\w\\-:@+~.#\\/]+$",
                                        "description": "ID of the widget; it needs to be stable over the entire lifecycle of the widget and unique in relation to all other widgets contained in the same work page"
                                      },
                                      "viz": {
                                        "type": "object",
                                        "required": [
                                          "appId",
                                          "vizId"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "maxLength": 70,
                                            "pattern": "^[\\w\\-:@+~.#\\/]+$"
                                          },
                                          "appId": {
                                            "type": "string",
                                            "maxLength": 70,
                                            "pattern": "^[\\w\\-:@+~.#\\/]+$"
                                          },
                                          "vizId": {
                                            "type": "string",
                                            "maxLength": 70,
                                            "pattern": "^[\\w\\-:@+~.#\\/]+$"
                                          }
                                        }
                                      },
                                      "vizConfigAdaptations": {
                                        "type": "object",
                                        "description": "Path/value pairs to overwrite the values of specified properties within the vizConfig object of the referenced visualization. All paths must start with a '/'. Values of the form {{<text-key>}} will be replaced by the corresponding language-specific text with that key in the text dictionary of the containing work page",
                                        "additionalProperties": false,
                                        "patternProperties": {
                                          "^(/[^/]+)+$": {
                                            "anyOf": [
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "boolean"
                                              },
                                              {
                                                "type": "object"
                                              },
                                              {
                                                "type": "array"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      },
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "site",
        "type": "object",
        "description": "A site defines an entry point for users to work with CDM content. Only the first site entity in the CDM document will be considered, all further sites will be ignored",
        "required": [
          "_version",
          "identification",
          "payload"
        ],
        "properties": {
          "_version": {
            "description": "Version of an entity",
            "type": "string",
            "default": "3.2.0",
            "enum": [
              "3.2.0",
              "3.2"
            ]
          },
          "identification": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "identification",
            "type": "object",
            "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
            "required": [
              "id",
              "entityType"
            ],
            "properties": {
              "title": {
                "description": "Title of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "description": {
                "description": "Description of the entity",
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
                  },
                  {
                    "description": "Fixed, untranslated string in specific language",
                    "type": "string"
                  }
                ]
              },
              "entityType": {
                "description": "Type (enumeration) of the entity",
                "type": "string",
                "enum": [
                  "group",
                  "catalog",
                  "businessapp",
                  "urltemplate",
                  "viztype",
                  "page",
                  "space",
                  "workpage",
                  "site"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$",
                "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
              },
              "providerId": {
                "description": "The parent content provider of the entity",
                "type": "string",
                "maxLength": 128,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              },
              "i18n": {
                "type": "string"
              },
              "softComponent": {
                "type": "string"
              }
            },
            "definitions": {}
          },
          "payload": {
            "type": "object",
            "required": [
              "siteConfig"
            ],
            "properties": {
              "siteConfig": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Site Configuration",
                "description": "Configuration of a site",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "title": {
                    "description": "Title of the site",
                    "type": "string"
                  },
                  "description": {
                    "description": "Additional description of the site",
                    "type": "string"
                  },
                  "alias": {
                    "description": "Alias of the site",
                    "type": "string"
                  },
                  "browserSettings": {
                    "description": "Browser settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "optimizedSiteLoading": {
                        "description": "Enables the caching of a site in the browser cache",
                        "type": "boolean",
                        "default": "false"
                      },
                      "asynchronousModuleLoading": {
                        "description": "When using asynchronous loading, the browser loads the site and apps that include SAPUI5 modules in parallel",
                        "type": "boolean",
                        "default": "false"
                      },
                      "browserFeatureAccess": {
                        "description": "Enables applications to access and use browser features, such as camera and geo location",
                        "type": "boolean",
                        "default": "true"
                      }
                    }
                  },
                  "userCapabilities": {
                    "description": "User capabilities of the site",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "personalizationSupported": {
                        "description": "Ensures that the App Finder and Edit Home Page options are visible in the user actions menu",
                        "type": "boolean",
                        "default": "true"
                      },
                      "themeSelectionSupported": {
                        "description": "Enables an end user to select a different theme",
                        "type": "boolean",
                        "default": "true"
                      },
                      "languageSelectionSupported": {
                        "description": "Enables an end user to select a different language for the site",
                        "type": "boolean",
                        "default": "true"
                      },
                      "supportedLanguages": {
                        "description": "List of languages the end user can select. Entries should a BCP47 language tags",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "default": [
                          "en"
                        ]
                      },
                      "sapMobileStartSupported": {
                        "description": "Enables users to install and register the mobile app at runtime",
                        "type": "boolean",
                        "default": "true"
                      },
                      "enterpriseSearchSupported": {
                        "description": "Enables integration with Enterprise Search",
                        "type": "boolean",
                        "default": "false"
                      },
                      "groupDisplayModeEnabled": {
                        "description": "Enables an end user to choose whether to show all groups at once (true) or show one group at a time (false) in the Home Page screen in the Settings dialog box",
                        "type": "boolean",
                        "default": "true"
                      }
                    }
                  },
                  "services": {
                    "description": "Services used by the site",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "keyUserAdaptation": {
                        "description": "Enables key users to adapt the UI of HTML5 apps at runtime",
                        "type": "boolean",
                        "default": "false"
                      },
                      "sapCompanion": {
                        "description": "Enables in-app help from the “?” icon in the UI shell header",
                        "type": "boolean",
                        "default": "false"
                      },
                      "sapCompanionParameters": {
                        "description": "JSON object with a map of parameter/value pairs that are required to retrieve the help content",
                        "type": "object"
                      },
                      "sapDigitalAssistant": {
                        "description": "Enables the Digital Assistant in this site",
                        "type": "boolean",
                        "default": "false"
                      }
                    }
                  },
                  "displaySettings": {
                    "description": "Display settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "launchpadViewMode": {
                        "description": "Mode how to display apps in the launchpad UI",
                        "type": "string",
                        "enum": [
                          "Groups",
                          "SpacesAndPages",
                          "SpacesAndWorkPages"
                        ],
                        "default": "Groups"
                      },
                      "tileSize": {
                        "description": "Determines the tile size behavior",
                        "type": "string",
                        "enum": [
                          "Responsive",
                          "Small"
                        ],
                        "default": "Responsive"
                      },
                      "showSourceSystemNames": {
                        "description": "Determines if source system information is shown on widgets. The information provided is the destination property (sap-provider-label) or the content provider ID when no value is defined. This setting is only relevant when Spaces and Pages view mode is switched on.",
                        "type": "boolean",
                        "default": "false"
                      },
                      "pageWidth": {
                        "description": "Defines the maximum width of a page that its content can fill. 'FullWidth' uses the complete width of the window. ‘Large’ uses 1520px, 'Medium' uses 1200px. If the window size exceeds the sizes for ‘Large’ and ‘Medium’ the page content is centered by default.",
                        "type": "string",
                        "enum": [
                          "Medium",
                          "Large",
                          "FullWidth"
                        ]
                      }
                    }
                  },
                  "displayVisibilitySettings": {
                    "description": "Screen display settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "showSearchInShellHeader": {
                        "description": "Ensures that the Search field appears in the shell header",
                        "type": "boolean",
                        "default": "true"
                      },
                      "showOrHideGroupsAndSections": {
                        "description": "Enables an end user to hide or show a group from their home page",
                        "type": "boolean",
                        "default": "true"
                      },
                      "showNotifications": {
                        "description": "Shows the Notifications icon in the launchpad shell bar",
                        "type": "boolean",
                        "default": "false"
                      },
                      "showAllMyApps": {
                        "description": "Displays the All My Apps navigation option",
                        "type": "boolean",
                        "default": "true"
                      }
                    }
                  },
                  "displayLocationSettings": {
                    "description": "Display location settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "appFinder": {
                        "description": "Determines where the quick access to the App Finder appears",
                        "type": "string",
                        "enum": [
                          "UserActionsMenu",
                          "ShellHeader"
                        ],
                        "default": "UserActionsMenu"
                      },
                      "editHomePage": {
                        "description": "Determines where the quick access to Edit Home Page appears",
                        "type": "string",
                        "enum": [
                          "UserActionsMenu",
                          "ShellHeader"
                        ],
                        "default": "UserActionsMenu"
                      },
                      "settings": {
                        "description": "Determines where the quick access to the Settings screen appears",
                        "type": "string",
                        "enum": [
                          "UserActionsMenu",
                          "ShellHeader"
                        ],
                        "default": "UserActionsMenu"
                      }
                    }
                  },
                  "personalizationSettings": {
                    "description": "Personalization settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "userHomepageSupported": {
                        "description": "Makes a personalizable homepage available to each end user",
                        "type": "boolean",
                        "default": "false"
                      }
                    }
                  },
                  "sessionTimeoutSettings": {
                    "description": "Session timeout settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "sessionTimeoutEnabled": {
                        "description": "Ensures that users are automatically logged out on session timeout",
                        "type": "boolean",
                        "default": "true"
                      },
                      "sessionDuration": {
                        "description": "Time in minutes that a session remains open when no actions are performed by the user. The duration must be shorter than that of the App Router",
                        "type": "number",
                        "default": 20
                      },
                      "sessionTimeoutAlertTime": {
                        "description": "Time in minutes before the session times out to alert the user",
                        "type": "number",
                        "default": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "texts": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "texts",
            "type": "array",
            "description": "CDM Design Time - Entity Texts",
            "items": {
              "type": "object",
              "description": "Contains translation dictionary of a specific locale",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "The locale of the specific translated dictionary",
                  "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
                },
                "textDictionary": {
                  "type": "object",
                  "patternProperties": {
                    "^[\\w\\W]*$": {
                      "type": "string",
                      "description": "The translated string value"
                    }
                  }
                }
              }
            },
            "definitions": {}
          }
        }
      }
    ]
  }
}