{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "space",
  "type": "object",
  "description": "Spaces are grouping content, currently only pages",
  "required": [
    "_version",
    "identification",
    "payload"
  ],
  "properties": {
    "_version": {
      "description": "Version of an entity",
      "type": "string",
      "default": "3.1.0",
      "enum": [
        "3.2.0",
        "3.2",
        "3.1.0",
        "3.1"
      ]
    },
    "identification": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "identification",
      "type": "object",
      "description": "CDM Identification defines identifiers and other meta attributes which are common for all entities",
      "required": [
        "id",
        "entityType"
      ],
      "properties": {
        "title": {
          "description": "Title of the entity",
          "anyOf": [
            {
              "type": "string",
              "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
            },
            {
              "description": "Fixed, untranslated string in specific language",
              "type": "string"
            }
          ]
        },
        "description": {
          "description": "Description of the entity",
          "anyOf": [
            {
              "type": "string",
              "pattern": "^\\{\\{[^\\W][\\w\\.\\-\\|]*\\}\\}$"
            },
            {
              "description": "Fixed, untranslated string in specific language",
              "type": "string"
            }
          ]
        },
        "entityType": {
          "description": "Type (enumeration) of the entity",
          "type": "string",
          "enum": [
            "group",
            "catalog",
            "businessapp",
            "urltemplate",
            "viztype",
            "page",
            "space",
            "workpage",
            "site"
          ]
        },
        "id": {
          "type": "string",
          "maxLength": 70,
          "pattern": "^[\\w\\-:@+~.#\\/]+$",
          "description": "ID of the entity; it needs to be stable over the entire lifecycle of the entity and unique per entity type exposed via the same content channel"
        },
        "providerId": {
          "description": "The parent content provider of the entity",
          "type": "string",
          "maxLength": 128,
          "pattern": "^[\\w\\-:@+~.#\\/]+$"
        },
        "i18n": {
          "type": "string"
        },
        "softComponent": {
          "type": "string"
        }
      },
      "definitions": {}
    },
    "payload": {
      "type": "object",
      "required": [
        "contentNodes"
      ],
      "properties": {
        "spaceConfig": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Space Configuration",
          "description": "Configuration of a space",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "title": {
              "description": "Represents the title of the Space",
              "type": "string",
              "default": ""
            },
            "description": {
              "description": "Represents an additional description of the Space ",
              "type": "string",
              "default": ""
            },
            "mergeId": {
              "description": "Entities of the same entity type with the same merge-ID may be merged",
              "type": "string",
              "maxLength": 35,
              "pattern": "^[\\w\\-:@+~.#\\/]+$"
            },
            "sortNumber": {
              "description": "Determines an order of all spaces: The space comes after other spaces with smaller sortNumber and before spaces with larger sortNumber; spaces with no sort number come after all spaces with a sortNumber.",
              "type": "number",
              "multipleOf": 0.00001,
              "exclusiveMinimum": -10000,
              "exclusiveMaximum": 10000
            }
          }
        },
        "contentNodes": {
          "description": "List of the assigned content nodes; so far restricted to a flat list of pages, might be extended in subsequent versions",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "additionalProperties": false,
            "properties": {
              "type": {
                "enum": [
                  "page",
                  "workpage"
                ]
              },
              "id": {
                "type": "string",
                "maxLength": 70,
                "pattern": "^[\\w\\-:@+~.#\\/]+$"
              }
            }
          }
        }
      }
    },
    "texts": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "texts",
      "type": "array",
      "description": "CDM Design Time - Entity Texts",
      "items": {
        "type": "object",
        "description": "Contains translation dictionary of a specific locale",
        "properties": {
          "locale": {
            "type": "string",
            "description": "The locale of the specific translated dictionary",
            "pattern": "^((?:[A-Za-z]{2,3}(?:[-_][A-Za-z]{3}){0,3})?|[A-Za-z]{4}|[A-Za-z]{5,8})(?:[-_]([A-Za-z]{4}))?(?:[-_]([A-Za-z]{2}|[0-9]{3}))?((?:[-_][0-9A-Za-z]{5,8}|[-_][0-9][0-9A-Za-z]{3})*)((?:[-_][0-9A-WYZa-wyz](?:[-_][0-9A-Za-z]{2,8})+)*)(?:[-_]([Xx](?:[-_][0-9A-Za-z]{1,8})+))?([-_][\\w]+)?$"
          },
          "textDictionary": {
            "type": "object",
            "patternProperties": {
              "^[\\w\\W]*$": {
                "type": "string",
                "description": "The translated string value"
              }
            }
          }
        }
      },
      "definitions": {}
    }
  }
}